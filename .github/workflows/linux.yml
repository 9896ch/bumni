name: Linux Ubuntu

on: [push, pull_request]

env:
  QTIFWVER: 4.7.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
       include:
         - dockerimg: amd64/ubuntu:focal
           repository: v4.19.310
           kernel_version: 4.19.310-0419310
           kernel_version_c: 202403152006
           upload: 1
         - dockerimg: amd64/ubuntu:focal
           repository: v5.4.272
           kernel_version: 5.4.272-0504272
           kernel_version_c: 202403151601
           upload: 0
         # Do not update
         - dockerimg: amd64/ubuntu:jammy
           repository: v5.10.130
           kernel_version: 5.10.130-0510130
           kernel_version_c: 202207121545
           upload: 0
         - dockerimg: amd64/ubuntu:jammy
           repository: v5.15.152
           kernel_version: 5.15.152-0515152
           kernel_version_c: 202403152001
           upload: 0
         - dockerimg: amd64/ubuntu:lunar
           repository: v6.1.82
           kernel_version: 6.1.82-060182
           kernel_version_c: 202403151941
           upload: 0
         - dockerimg: amd64/ubuntu:noble
           repository: v6.6.22
           kernel_version: 6.6.22-060622
           kernel_version_c: 202403151938
           upload: 0
         - dockerimg: amd64/ubuntu:noble
           repository: v6.7.10
           kernel_version: 6.7.10-0607010
           kernel_version_c: 202403151538
           upload: 0
         - dockerimg: amd64/ubuntu:noble
           repository: v6.8.1
           kernel_version: 6.8.1-060801
           kernel_version_c: 202403151937
           upload: 0
    steps:
    - uses: actions/checkout@v2
    - name: Release build
      uses: addnab/docker-run-action@v3
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: gcr.io
        image: ${{ matrix.dockerimg }}
        options: >-
          --privileged
          -v ${{ github.workspace }}:/sources
          -e GITHUB_REF=${{ env.GITHUB_REF }}
          -e GITHUB_SERVER_URL=${{ env.GITHUB_SERVER_URL }}
          -e GITHUB_REPOSITORY=${{ env.GITHUB_REPOSITORY }}
          -e GITHUB_RUN_ID=${{ env.GITHUB_RUN_ID }}
          -e DOCKERIMG=${{ matrix.dockerimg }}
          -e REPOSITORY=${{ matrix.repository }}
          -e KERNEL_VERSION=${{ matrix.kernel_version }}
          -e KERNEL_VERSION_C=${{ matrix.kernel_version_c }}
          -e QTIFWVER=${{ env.QTIFWVER }}
          -e UPLOAD=${{ matrix.upload }}
        run: |
          cd /sources
          echo
          echo Install dependencies
          echo
          chmod +x ports/ci/linux/install_deps.sh
          ./ports/ci/linux/install_deps.sh
          echo
          echo Release Build
          echo
          chmod +x ports/ci/linux/build.sh
          ./ports/ci/linux/build.sh
          echo
          echo Release Deploy
          echo
          chmod +x ports/ci/linux/deploy.sh
          ./ports/ci/linux/deploy.sh
    - name: Daily build
      uses: addnab/docker-run-action@v3
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: gcr.io
        image: ${{ matrix.dockerimg }}
        options: >-
          --privileged
          -v ${{ github.workspace }}:/sources
          -e GITHUB_REF=${{ env.GITHUB_REF }}
          -e GITHUB_SERVER_URL=${{ env.GITHUB_SERVER_URL }}
          -e GITHUB_REPOSITORY=${{ env.GITHUB_REPOSITORY }}
          -e GITHUB_RUN_ID=${{ env.GITHUB_RUN_ID }}
          -e DOCKERIMG=${{ matrix.dockerimg }}
          -e REPOSITORY=${{ matrix.repository }}
          -e KERNEL_VERSION=${{ matrix.kernel_version }}
          -e KERNEL_VERSION_C=${{ matrix.kernel_version_c }}
          -e QTIFWVER=${{ env.QTIFWVER }}
          -e UPLOAD=${{ matrix.upload }}
          -e DAILY_BUILD=1
        run: |
          cd /sources
          echo
          echo Install dependencies
          echo
          chmod +x ports/ci/linux/install_deps.sh
          ./ports/ci/linux/install_deps.sh
          echo
          echo Daily Build
          echo
          chmod +x ports/ci/linux/build.sh
          ./ports/ci/linux/build.sh
          echo
          echo Daily Deploy
          echo
          chmod +x ports/ci/linux/deploy.sh
          ./ports/ci/linux/deploy.sh
    - name: Release Upload
      uses: softprops/action-gh-release@v1
      if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.upload }}
      with:
        files: packages-v4.19/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Daily Build Upload
      uses: softprops/action-gh-release@v1
      if: ${{ !startsWith(github.ref, 'refs/tags/') && matrix.upload }}
      with:
        body: "${{ github.event.head_commit.message }} (commit: ${{ github.sha }})<hr>**Note**: Ignore the commit information of the tag, the files in the release keep updating with every new build, these packages were built from ${{ github.sha }} commit."
        prerelease: true
        files: packages-v4.19/*
        name: Daily Build
        tag_name: daily-build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
